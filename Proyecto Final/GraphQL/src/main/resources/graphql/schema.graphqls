type Query {
    findAllElectronicDevice : [ElectronicDevices]
    findElectronicDeviceById(electronicDeviceId: Int) : ElectronicDevices
    findElectronicDeviceByTypeId(typedId: Int) : [ElectronicDevices]

    findAllTypes : [Type]
    findTypeById(typeId: Int) : Type
    findTypeBySubTypeId(subtypeId: Int) : [Type]

    findAllSubTypes : [SubType]
    findSubTypeById(subTypeId: Int) : SubType
}

type Mutation {
    createElectronicDevice(inputDevice: ElectronicDevice) : ElectronicDevices
    updateElectronicDevice(inputDevice: ElectronicDeviceUpdate) : ElectronicDevices
    deleteElectronicDevice(electronicDeviceId: Int) : String

    createType(inputType: Types) : Type
    updateType(inputType: Types) : Type
    deleteType(typeId: Int) : String

    createSubType(inputSubType: SubTypes) : SubType
    updateSubType(inputSubType: SubTypes) : SubType
    deleteSubType(subTypeId: Int) : String

}

type ElectronicDevices {
    deviceId: ID,
    description: String,
    type: Type
}

input ElectronicDevice {
    description: String,
    typeId: Int!
}

input ElectronicDeviceUpdate {
    deviceId: ID!,
    description: String,
    typeId: Int
}

type Type {
    typeId: ID,
    description: String,
    characteristics: String,
    subType: SubType
}

input Types {
    typeId: ID,
    description: String,
    characteristics: String,
    subtypeId: Int
}

type SubType {
    subTypeId: ID,
    description: String
}

input SubTypes {
    subTypeId: ID,
    description: String
}
